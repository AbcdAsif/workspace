ip link
ip addr add 192.168.1.10/24 dev eth0

route
ip route add 198.168.2.0/24 via 192.168.1.1
ip route add default via 192.168.1.1   ------- giving the system route to internet through the router

cat /proc/sys/net/ipv4/ip_forward 
by default it is 0 , we have to set it to 1 to forward the traffic      --------

modify the same value at   /etc/sysctl.conf    to 1 


netstat -plnt

netstat -anp | grep etcd | grep 2379 | wc -l         ------- to check client connections established with etcd

cat >> /etc/hosts    --- the host will check at this location first to resolve the IP address of the target



cat /etc/resolv.conf    --- location to point it to DNS server 
name server     IP
search uvm.asia           

nslookup www.google.com    ---------  it only querries DNS server

ip netns add red
ip netns
ip -n red link
arp
ip link add verh-red type veth peer name veth-blue
ip link set veth-red netns red
ip link set veth-blue netns blue

ip -n red addr add 192.168.15.1 dev veth-red
ip -n blue addr add 192.168.15.2 dev veth-blue

ip -n red link set veth-red up

ip netns exec red ping 192.168.15.2

ip netns exec red arp

ip link add v-net-0 type bridge
ip link set dev v-net-0 up

ip -n red link del veth-red

ip link add veth-red type veth peer name veth-red-br
ip link set veth-red netns red
ip link set veth-red-br master v-net-0
ip -n red addr add 192.168.15.1 dev veth-red
ip -n red link set veth-red up| 

ip addr add 192.168.15.5/24 dev v-net-0

ip netns exec blue ip route add 192.168.1.0/24 via 192.168.15.5

iptables -t nat -A POSTROUTING -s 192.168.15.0/24 -j MASQUERADE   ----- NAT GATEWAY

ip netns exec blue ip route add default via 192.168.15.5

iptables -t -nat -A PREROUTING --dport 80 --to-destination 192.168.15.2:80 j DNAT

bridge add <cid> namespace

iptables -nvL -t nat         ------------   how to check NAT rule which helps to route the traffic
                                                           from port of host to the port of the container 



--------------------------------------------------------------
CNI

ps -aux | grep kubelet       ------------ to check network plugin configured
opt/cni/bin       -------------------CNI binaries location 
ls /etc/cni/net.d/     -------------  which is the CNI plugin configured to be used 
                                                   on this kubernetes cluster
/etc/cni/net.d/10-flannel.conflist       --------


-----------------------------------------------------------------

Service Networking


iptables -L -t net | grep db-service

cat /var/log/kube-proxy.log

cat /etc/kubernetes/manifests/kube-apiserver.yaml | grep cluster-ip-range 

---------------------------------------------------------------------

Core - DNS

kubectl -n kube-system describe deployments.apps coredns | grep -A2 Args | grep Corefile

kubectl exec -it hr -- nslookup mysql.payroll > /root/CKA/nslookup.out




